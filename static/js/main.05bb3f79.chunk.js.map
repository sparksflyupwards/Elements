{"version":3,"sources":["images/man1.jpg","images/man2.jpg","images/woman1.jpg","questionCard/questionCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","answerValues","QuestionCard","props","React","createElement","Card","isHoverable","variant","css","margin","mw","Body","style","marginTop","questionImages","length","Collapse","Group","accordion","title","questionLabel","expanded","isOpen","disabled","map","image","index","Image","width","height","src","alt","objectFit","marginLeft","Radio","orientation","defaultValue","onChange","nextQuestion","questionOptions","question","value","color","size","App","questions","_useState","useState","q","indx","_useState2","_slicedToArray","questionOpen","setQuestionOpen","questionCardRef","useRef","current","ref","createRef","moveFromIndex","scrollIntoView","behavior","block","inline","NextUIProvider","className","option","onClick","marginBottom","man1","woman1","man2","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qPCclCC,EAAe,CAAC,IAAM,IAAK,IAAM,KAI1BC,EAAe,SAACC,GAKzB,OACAC,IAAAC,cAACC,IAAI,CAACC,aAAW,EAACC,QAAQ,WAAWC,IAAK,CAACC,OAAO,OAAQC,GAAI,UAC1DP,IAAAC,cAACC,IAAKM,KAAI,KAGdR,IAAAC,cAAA,OAAKQ,MAAO,CAACH,OAAO,OAAQI,UAAW,UAGtCX,EAAMY,gBAAkBZ,EAAMY,eAAeC,OAAS,GACzDZ,IAAAC,cAACY,IAASC,MAAK,CAACC,WAAW,GAC5Bf,IAAAC,cAACY,IAAQ,CAAEG,MAAOjB,EAAMkB,cAAeC,SAAUnB,EAAMoB,OAAQC,UAAWrB,EAAMoB,QAC7EnB,IAAAC,cAAA,WACKF,EAAMY,eAAeU,IAAI,SAACC,EAAOC,GAC5B,OAAQvB,IAAAC,cAACuB,IAAK,CACdC,MAAO,IACPC,OAAQ,IACRC,IAAK5B,EAAMY,eAAeY,GAC1BK,IAAI,gBACJC,UAAU,aAIxB7B,IAAAC,cAAA,OAAKQ,MAAO,CAACqB,WAAW,MAAOpB,UAAW,SAC1CV,IAAAC,cAAC8B,IAAMjB,MAAK,CAAEkB,YAAY,aAAaC,aAAa,UAAUC,SAAU,WAzBhEnC,EAAMoC,aAAapC,EAAMwB,SA0BxBxB,EAAMqC,gBAAgBf,IAAI,SAACgB,EAAUd,GAClC,OACFvB,IAAAC,cAAC8B,IAAK,CACNO,MAAOzC,EAAa0B,GACnBgB,MAAM,UACN9B,MAAO,CAACH,OAAO,QACfkC,KAAK,MACHH,wECKEI,MAlDf,WAEE,IAAMC,EAAY,CAAC,EAAG,EAAG,EAAG,GAAGC,EACSC,mBAASF,EAAUrB,IAAI,SAACwB,EAAEC,GAAI,OAAU,GAANA,KAASC,EAAAC,YAAAL,EAAA,GAA5EM,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAuBC,iBAAO,IAEpCD,EAAgBE,QAAUX,EAAUrB,IAClC,SAACiC,EAAK/B,GAAK,OAAO4B,EAAgBE,QAAQ9B,GAASvB,IAAMuD,cAI3D,IAAMpB,EAAe,SAACqB,GACjBA,EAAgBd,EAAU9B,OAAS,IACxBuC,EAAgBE,QAAQG,EAAgB,GAChDC,eAAe,CAACC,SAAU,SAAUC,MAAO,UAAWC,OAAQ,YAElEV,EAAgBD,EAAa5B,IAAI,SAACwB,EAAEC,GAAI,OAAGA,GAAMU,EAAc,OAInE,OACExD,IAAAC,cAAC4D,IAAc,KACb7D,IAAAC,cAAA,OAAK6D,UAAU,OAEZpB,EAAUrB,IAAI,SAAC0C,EAAQxC,GAEtB,OADoB4B,EAAgB5B,GAElCvB,IAAAC,cAAA,OAAK+D,QAAS,kBAAId,EAAgBD,EAAa5B,IAAI,SAACwB,EAAEC,GAAI,OAAGA,GAAMvB,MAASd,MAAO,CAAEwD,aAAc,QAAUX,IAAKH,EAAgBE,QAAQ9B,IACxIvB,IAAAC,cAACH,EAAY,CACXmB,cACE,8DAEFmB,gBAAiB,CAAC,WAAY,YAAa,YAAa,QACxDzB,eAAgB,CAACuD,IAAMC,IAAQC,KAC/B7C,MAAOA,EACPY,aAAcA,EACdhB,OAAQ8B,EAAa1B,WC/BtB8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC5E,EAAA6E,EAAA,GAAAC,KAAA9E,EAAA+E,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHrF,IAAAC,cAACD,IAAMsF,WAAU,KACftF,IAAAC,cAACwC,EAAG,QAOR4B","file":"static/js/main.05bb3f79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/man1.d1848d75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/man2.e4671bc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/woman1.2508a3a7.jpg\";","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Radio, Text, Image, Collapse } from '@nextui-org/react';\n\n\n\ninterface IQuestionCardProps {\n    questionLabel: string;\n    questionOptions: Array<string> ;\n    questionImages: Array<string>;\n    index: number;\n    isOpen: boolean;\n    nextQuestion: (moveFromIndex: number) => void;\n}\n\nconst answerValues = ['a' , 'b', 'c' , 'd']\n\n\n\nexport const QuestionCard = (props: IQuestionCardProps)=>{\n\n    const handleNextQuestion = ()=>{\n        props.nextQuestion(props.index)\n    }\n    return (\n    <Card isHoverable variant=\"bordered\" css={{margin:'auto', mw: \"800px\" }}>\n        <Card.Body>\n  \n\n    <div style={{margin:'auto', marginTop: ' 10px'}}>\n   \n\n    {props.questionImages && props.questionImages.length > 2 && \n  <Collapse.Group accordion={false}>\n <Collapse  title={props.questionLabel} expanded={props.isOpen} disabled={!props.isOpen}>\n    <div>\n        {props.questionImages.map((image, index)=>{\n              return (<Image\n              width={320}\n              height={180}  \n              src={props.questionImages[index]}\n              alt=\"Default Image\"\n              objectFit=\"cover\"\n            />)\n        })}\n    </div>\n<div style={{marginLeft:'15%', marginTop: '30px'}}>\n<Radio.Group  orientation=\"horizontal\" defaultValue=\"primary\" onChange={()=>handleNextQuestion()}>\n        {props.questionOptions.map((question, index) => {\n            return (      \n          <Radio \n          value={answerValues[index]}\n           color=\"primary\"\n           style={{margin:'auto'}}\n           size=\"xs\">\n            {question}\n          </Radio>)\n            \n        })}\n</Radio.Group>\n</div>\n\n</Collapse>\n</Collapse.Group>\n    }\n    </div>\n  \n        </Card.Body>\n      </Card>\n  \n\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { QuestionCard } from \"./questionCard/questionCard\";\nimport { NextUIProvider } from \"@nextui-org/react\";\nimport man1 from \"./images/man1.jpg\"\nimport man2 from \"./images/man2.jpg\";\nimport woman1 from \"./images/woman1.jpg\";\nimport {useRef} from 'react';\n\nfunction App() {\n\n  const questions = [0, 1, 2, 3];\n  const [questionOpen, setQuestionOpen] = useState(questions.map((q,indx)=> indx==0))\n  const questionCardRef: any = useRef([]);\n\n  questionCardRef.current = questions.map(\n    (ref, index) =>   questionCardRef.current[index] = React.createRef()\n  )\n   \n  \n  const nextQuestion = (moveFromIndex: number) => {\n    if(moveFromIndex< (questions.length - 1)){\n      const ref = questionCardRef.current[moveFromIndex + 1];\n      ref.scrollIntoView({behavior: \"smooth\", block: \"nearest\", inline: \"nearest\"});\n      //TODO: find a way to write this more expressively\n      setQuestionOpen(questionOpen.map((q,indx)=>indx==moveFromIndex+1))\n    }\n  };\n\n  return (\n    <NextUIProvider>\n      <div className=\"App\">\n        \n        {questions.map((option, index) => {\n          const questionRef = questionCardRef[index]\n          return (\n            <div onClick={()=>setQuestionOpen(questionOpen.map((q,indx)=>indx==index))} style={{ marginBottom: \"40px\" }} ref={questionCardRef.current[index]}>\n              <QuestionCard\n                questionLabel={\n                  \"How would you describe these peopleâ€™s emotional state?\"\n                }\n                questionOptions={[\"confused\", \"perplexed\", \"irritated\", \"lost\"]}\n                questionImages={[man1, woman1, man2]}\n                index={index}\n                nextQuestion={nextQuestion}\n                isOpen={questionOpen[index]}\n               \n              />\n            \n            </div>\n          );\n        })}\n     \n\n      </div>\n    </NextUIProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}